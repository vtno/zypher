// Code generated by MockGen. DO NOT EDIT.
// Source: internal/server/server.go

// Package server is a generated GoMock package.
package server

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockAuthGuard is a mock of AuthGuard interface.
type MockAuthGuard struct {
	ctrl     *gomock.Controller
	recorder *MockAuthGuardMockRecorder
}

// MockAuthGuardMockRecorder is the mock recorder for MockAuthGuard.
type MockAuthGuardMockRecorder struct {
	mock *MockAuthGuard
}

// NewMockAuthGuard creates a new mock instance.
func NewMockAuthGuard(ctrl *gomock.Controller) *MockAuthGuard {
	mock := &MockAuthGuard{ctrl: ctrl}
	mock.recorder = &MockAuthGuardMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuthGuard) EXPECT() *MockAuthGuardMockRecorder {
	return m.recorder
}

// AuthenticateRoot mocks base method.
func (m *MockAuthGuard) AuthenticateRoot(arg0 string) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AuthenticateRoot", arg0)
	ret0, _ := ret[0].(bool)
	return ret0
}

// AuthenticateRoot indicates an expected call of AuthenticateRoot.
func (mr *MockAuthGuardMockRecorder) AuthenticateRoot(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AuthenticateRoot", reflect.TypeOf((*MockAuthGuard)(nil).AuthenticateRoot), arg0)
}
